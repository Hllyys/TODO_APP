generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model tasks {
  explation   String   @db.VarChar
  category_id Int
  date        DateTime @default(now()) @db.Timestamptz(6)
  status      String   @db.VarChar
  id          Int      @id(map: "tasks_pk") @default(autoincrement())
  user_id     Int
  files       files[]
  users       users    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_user_id")
  category    category @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tasks_category_fk")
}

model users {
  name         String   @db.VarChar
  surname      String   @db.VarChar
  nickname     String   @db.VarChar
  mail         String   @db.VarChar
  password     String   @db.VarChar
  id           Int      @id(map: "users_pk") @default(autoincrement())
  created_date DateTime @default(now()) @db.Timestamptz(6)
  tasks        tasks[]
}

model files {
  id       Int      @id(map: "files_pk") @default(autoincrement())
  filepath String   @db.VarChar
  filename String   @db.VarChar
  uploadat DateTime @default(now()) @db.Timestamptz(6)
  task_id  Int
  tasks    tasks    @relation(fields: [task_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "files_tasks_fk")
}

model category {
  id            Int     @id(map: "category_pk") @default(autoincrement())
  category_name String  @db.VarChar
  tasks         tasks[]
}
